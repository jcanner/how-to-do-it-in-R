---
title: "Scatterplots"
format: 
  live-html:
    webr:
      packages: 
        - mosaic
        - ggformula
        - palmerpenguins
      cell-options:
        warning: false
        completion: false
execute: 
  warning: false
  message: false
code-copy: true
code-overflow: wrap
toc: true
css: ../styles.css
---

{{< include ../_extensions/r-wasm/live/_knitr.qmd >}}


```{r}
#| label: theme
#| include: false
#| edit: false
library(ggplot2)
theme_set(theme_light())
options(ggplot2.continuous.color = scale_color_viridis_c, 
        ggplot2.continuous.fill = scale_fill_viridis_c,
        ggplot2.discrete.color = scale_color_viridis_d,
        ggplot2.discrete.fill = scale_fill_viridis_d)
```


## Getting Started

First, be sure you have installed `ggformula`. Remember, you only need to install the package once on your machine.

Then, be sure to load the package `ggformula`. Remember, you need to do this with each new Quarto/RMarkdown document or R Session.

```{webr}
#| label: setup
library(ggformula) #for graphs
```

### Data for Examples <a class="btn btn-primary" data-bs-toggle="collapse" href="#data-for-examples" role="button" aria-expanded="false" aria-controls="data-for-examples">Show</a>

::: {#data-for-examples .collapse .multi-collapse}

As a reminder (see [Overview of Data Visualization](visualization-overview.qmd), we will be using the `penguins` data from the `palmerpenguins` package:

```{r}
#| label: load-penguins
library(palmerpenguins)
```

Here is a snippet of the data:

```{r}
#| label: data-structure 
#| echo: false
library(dplyr)
library(gt)
slice_sample(penguins, n = 5) |> 
  gt::gt() |> 
  gt::tab_header(title = "Palmer Penguins")
```
:::


## Scatterplots

### Basic Code

For two quantitative variables, `x` and `y`, here is the general structure for a scatterplot.

```{r}
#| label: scatterplot-basic
#| eval: false
gf_point(y ~ x, data = mydata)
```

Run the code below to see an example using the **quantitative** variables `bill_length_mm` and `bill_depth_mm` from the `penguins` data. Then replace `bill_length_mm` with another quantitative variable from the `penguins` data or switch the order to see what happens. 

```{webr}
#| label: scatterplot-one
gf_point(bill_length_mm ~ bill_depth_mm, 
         data = penguins)
```

::: {.callout-important}

## Warnings in R

Notice the warning produced from running the code. This is just a warning that there were rows (penguins) ignored due to missing data for the variables visualized. A **Warning** is simply R communicating a decision it made without your consent. The code still works.

:::

## Adding a Regression Line






