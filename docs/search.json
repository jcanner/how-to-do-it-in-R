[
  {
    "objectID": "overview/code-style-guide.html",
    "href": "overview/code-style-guide.html",
    "title": "CSUMB R Style Guide",
    "section": "",
    "text": "Use &lt;-, not =, for assignment for new data, variables, or objects\n\n\n\n\n\nAdding extra spaces is ok if it improves alignment of = within functions or &lt;- for assignments.\nMost infix operators (==, +, -, &lt;-, =, etc.) should always be surrounded by spaces.\nMake sure a function name stays attached to the subsequent parenthesis with no space in between\nAlways put a space after a comma, never before, just like in regular English.\n\n\n\n\n\nIndentation and spacing are used consistently to maximize readability and long lines are broken into appropriate pieces.\nUse proper indentation. Use one line each for the function name, each argument, and the closing ).\n\n\n\n\n\nCode is separated into meaningful code chunks, such as Data Reading/Cleaning, Descriptive Statistics, Graphics/Visualizations, and Analysis",
    "crumbs": [
      "Setup R",
      "R Code Style Guide"
    ]
  },
  {
    "objectID": "overview/code-style-guide.html#formatting",
    "href": "overview/code-style-guide.html#formatting",
    "title": "CSUMB R Style Guide",
    "section": "",
    "text": "Use &lt;-, not =, for assignment for new data, variables, or objects\n\n\n\n\n\nAdding extra spaces is ok if it improves alignment of = within functions or &lt;- for assignments.\nMost infix operators (==, +, -, &lt;-, =, etc.) should always be surrounded by spaces.\nMake sure a function name stays attached to the subsequent parenthesis with no space in between\nAlways put a space after a comma, never before, just like in regular English.\n\n\n\n\n\nIndentation and spacing are used consistently to maximize readability and long lines are broken into appropriate pieces.\nUse proper indentation. Use one line each for the function name, each argument, and the closing ).\n\n\n\n\n\nCode is separated into meaningful code chunks, such as Data Reading/Cleaning, Descriptive Statistics, Graphics/Visualizations, and Analysis",
    "crumbs": [
      "Setup R",
      "R Code Style Guide"
    ]
  },
  {
    "objectID": "overview/code-style-guide.html#naming",
    "href": "overview/code-style-guide.html#naming",
    "title": "CSUMB R Style Guide",
    "section": "Naming",
    "text": "Naming\n\nVariables, files, code chunks, and other objects are named appropriately and add to the scripts readability.\nVariable, file, and function names should use only lowercase letters, numbers, and . Use underscores () (so called snake_case) to separate words within a name.",
    "crumbs": [
      "Setup R",
      "R Code Style Guide"
    ]
  },
  {
    "objectID": "overview/code-style-guide.html#comments",
    "href": "overview/code-style-guide.html#comments",
    "title": "CSUMB R Style Guide",
    "section": "Comments",
    "text": "Comments\n\nComments are used appropriately throughout the script to organize the script and clarify what particular (sets of) commands are meant to accomplish. It is not necessary to comment each line, but, at minimum, each code chunk should have a comment of the objective of the code chunk.\nDocumentation and comments that describe the purpose of the code and why it does things, rather than only stating obvious facts about what the code is doing.",
    "crumbs": [
      "Setup R",
      "R Code Style Guide"
    ]
  },
  {
    "objectID": "overview/code-style-guide.html#readability",
    "href": "overview/code-style-guide.html#readability",
    "title": "CSUMB R Style Guide",
    "section": "Readability",
    "text": "Readability\n\nLoad packages all at once at the very beginning of the file in the setup code chunk.\nQuarto/RMarkdown is divided into sections using appropriate header sizes and titles.\nR Scripts and output are ordered and labeled as appropriate.\nThere is no unused or unnecessary output or code in the knitted document (e.g. printed data)",
    "crumbs": [
      "Setup R",
      "R Code Style Guide"
    ]
  },
  {
    "objectID": "overview/code-style-guide.html#consistency",
    "href": "overview/code-style-guide.html#consistency",
    "title": "CSUMB R Style Guide",
    "section": "Consistency",
    "text": "Consistency\n\nStylistic choices are used consistently throughout each script and follow commonly used conventions or agreed upon norms.",
    "crumbs": [
      "Setup R",
      "R Code Style Guide"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "How to do it in R",
    "section": "",
    "text": "This website provides quick search for the code used in introductory statistics courses at California State University, Monterey Bay. It uses the following packages:\n\nggformula\n\nmosaic\n\ndplyr\n\nreadr\npwr\n\nstats\n\nggplot2\n\nIf you do not have R and R Studio Installed, please check out the instructions here first:\nBefore you use the code provided on this website, first run the following code:\n\ninstall.packages(c(\"ggformula\", \"mosaic\", \"dplyr\", \"readr\", \"pwr\", \"ggplot2\"))\n\nNote that stats is installed by default.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "data-visualization/histograms.html",
    "href": "data-visualization/histograms.html",
    "title": "Histograms",
    "section": "",
    "text": "First, be sure you have installed ggformula. Remember, you only need to install the package once on your machine.\nThen, be sure to load the package ggformula. Remember, you need to do this with each new Quarto/RMarkdown document or R Session.\n\n\n\n\n\n\n\n\n\n\nAs a reminder (see Overview of Data Visualization, we will be using the penguins data from the palmerpenguins package:\n\nlibrary(palmerpenguins)\n\nHere is a snippet of the data:\n\n\n\n\n\n\n\n\nPalmer Penguins\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\nChinstrap\nDream\n51.5\n18.7\n187\n3250\nmale\n2009\n\n\nGentoo\nBiscoe\n49.1\n14.8\n220\n5150\nfemale\n2008\n\n\nAdelie\nTorgersen\n40.6\n19.0\n199\n4000\nmale\n2009\n\n\nGentoo\nBiscoe\n48.4\n14.4\n203\n4625\nfemale\n2009\n\n\nAdelie\nTorgersen\nNA\nNA\nNA\nNA\nNA\n2007",
    "crumbs": [
      "Data Visualizations with `ggformula`",
      "Histograms"
    ]
  },
  {
    "objectID": "data-visualization/histograms.html#getting-started",
    "href": "data-visualization/histograms.html#getting-started",
    "title": "Histograms",
    "section": "",
    "text": "First, be sure you have installed ggformula. Remember, you only need to install the package once on your machine.\nThen, be sure to load the package ggformula. Remember, you need to do this with each new Quarto/RMarkdown document or R Session.\n\n\n\n\n\n\n\n\n\n\nAs a reminder (see Overview of Data Visualization, we will be using the penguins data from the palmerpenguins package:\n\nlibrary(palmerpenguins)\n\nHere is a snippet of the data:\n\n\n\n\n\n\n\n\nPalmer Penguins\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\nChinstrap\nDream\n51.5\n18.7\n187\n3250\nmale\n2009\n\n\nGentoo\nBiscoe\n49.1\n14.8\n220\n5150\nfemale\n2008\n\n\nAdelie\nTorgersen\n40.6\n19.0\n199\n4000\nmale\n2009\n\n\nGentoo\nBiscoe\n48.4\n14.4\n203\n4625\nfemale\n2009\n\n\nAdelie\nTorgersen\nNA\nNA\nNA\nNA\nNA\n2007",
    "crumbs": [
      "Data Visualizations with `ggformula`",
      "Histograms"
    ]
  },
  {
    "objectID": "data-visualization/histograms.html#histograms-with-one-quantitative-variable",
    "href": "data-visualization/histograms.html#histograms-with-one-quantitative-variable",
    "title": "Histograms",
    "section": "Histograms with One Quantitative Variable",
    "text": "Histograms with One Quantitative Variable\n\nBasic Code\nFor a single quantitative variable, x, here is the general structure for a histogram.\n\ngf_histogram(~x, \n             data = mydata)\n\nRun the code below to see an example using the quantitative variable bill_length_mm from the penguins data. Then replace bill_length_mm with another quantitative variable from the penuins data (e.g. bill_depth_mm)\n\n\n\n\n\n\n\n\nNotice the warning produced from running the code. This is just a warning that there were rows (penguins) ignored due to missing data for the variables visualized.\n\n\nBin Widths\nOne of the features of a histogram is the bin width. The bin width is something that is automatically generated for most histogram functions, but it is not always ideal. You can add an argument to the R function gf_histogram() to modify the bin width.\n\ngf_histogram(~ x, \n             data = mydata, \n             binwidth = 10)  #adjust this number\n\nRun the code below to see an example using the quantitative variable bill_length_mm from the penguins data with a bin width of 5 (mm). Modify the bin width and see how it affects the histogram.\n\n\n\n\n\n\n\n\n\n\nAdding Labels\nDescriptive labels are important for any visualization. We can always add them to any visualization by adding xlab = and ylab = to your function.\n\ngf_histogram(~x, \n             data = mydata,\n             xlab = \"X Axis Label\",\n             ylab = \"Y Axis Label\",\n             title = \"Descriptive Title\")\n\nAdd labels and a title to the histogram for bill_length_mm.\n\n\n\n\n\n\n\n\n\n\nOther Modifications\nWe can add a few other modifications that purely aesthetic - just to make our graphs look nicer or easier to read.\n\nOutlining the Bars\nWe can add a color that outlines the bars by telling R to outline the color of the bars in black.\n\ngf_histogram(~x, \n             data = mydata,\n             xlab = \"X Axis Label\",\n             ylab = \"Y Axis Label\",\n             title = \"Descriptive Title\",\n             color = \"black\")\n\n\n\nFilling the Bars with Color\nWe can add a color to fill the bars by telling R to fill the bars with a specified color either using a built in color from R or using a hex code for colors .\n\ngf_histogram(~x, \n             data = mydata,\n             xlab = \"X Axis Label\",\n             ylab = \"Y Axis Label\",\n             title = \"Descriptive Title\",\n             fill = \"darkcyan\")\n\n\n\nChanging the Theme\nThe package ggformula is built on top of another package called ggplot2 and so any ggplot2 function can be added to a ggformula generated graphic. For example, we can change the theme to a built-in theme.\nTry changing the theme to the following graph:\n\n\n\n\n\n\n\n\n\n\nTry It Out: Modifications\nTry adding some modifications for the histogram of bill_length_mm.",
    "crumbs": [
      "Data Visualizations with `ggformula`",
      "Histograms"
    ]
  },
  {
    "objectID": "data-visualization/histograms.html#histograms-for-comparisons-across-groups",
    "href": "data-visualization/histograms.html#histograms-for-comparisons-across-groups",
    "title": "Histograms",
    "section": "Histograms for Comparisons Across Groups",
    "text": "Histograms for Comparisons Across Groups\nWhen we have a quantitative variable that has been measured across multiple groups, we may be interested in comparing histograms across the values/groups of a categorical variable. We can do this using two different features of data visualization:\n\nColor Differences\n\nFacets\n\n\nAdding Color to Groups\nSimilar to changing the color of bars to a single color, we can use the fill = argument but instead specify our categorical variable z.\n\ngf_histogram(~x, \n             data = mydata,\n             fill = ~z) #don't forget the ~ before the variable name\n\nHere is the histogram of bill_length_mm with color varied by species a categorical variable with values of Adelie, Chinstrap, and Gentoo. Modify the code below to change the fill color to another categorical variable such as island or sex and see what happens.\n\n\n\n\n\n\n\n\n\n\nFaceting by Groups\nFaceting in visualization is a tool that allows you to easily split up data across multiple panels of the same type. To do this in ggformula you add | z after the formula which conditions the graph on the categorical variable z and splits the graph by the groups/values of z.\n\ngf_histogram(~x | z, \n             data = mydata)\n\nHere is the histogram of bill_length_mm with facets based on species, a categorical variable with values of Adelie, Chinstrap, and Gentoo. Modify the code below to change the facets to another categorical variable such as island or sex and see what happens. Try adding fill by the facet variable as well.\n\n\n\n\n\n\n\n\n\nUsing ggplot2 to Control Facets\nUnfortunately, the ggformula option for facets does not give you much control on how to organize the facets, so it might be useful to instead of a ggplot2 option such as facet_wrap() or facet_grid. For example, here is an example using facet_wrap() that allows us to stack our facets into one column (ncol = 1). Look up the options for different facet functions and try other modification.",
    "crumbs": [
      "Data Visualizations with `ggformula`",
      "Histograms"
    ]
  },
  {
    "objectID": "data-visualization/visualization-overview.html",
    "href": "data-visualization/visualization-overview.html",
    "title": "Overview for Data Visualization",
    "section": "",
    "text": "The package ggformula is built to overlay the Grammar of Graphics used in package ggplot2 with a formula based syntax. The formula based syntax means that all ggformula generated graphics will generally take one of the following forms:\nOne Variable\n\ngf_goal(~ x, data = mydata)\n\nTwo Variable - Relationships\n\ngf_goal(y ~ x, data = mydata)\n\nTwo or More Variables Split by Groups\n\ngf_goal(~ x | z, data = mydata)\ngf_goal(y ~ x | z, data = mydata)\n\nwhere the\n\ngoal will be the specific function for the graph type (e.g. gf_histogram()),\nthe y and x will be the specific variables/columns in the data mapped to the y-axis and x-axis respectively, with | z the feature that facets into different graphs for group values of z, and\nmydata is the object name of your data.\n\n\n\nFirst, be sure you have installed ggformula. Remember, you only need to install the package once on your machine.\nThen, be sure to load the package ggformula. Remember, you need to do this with each new Quarto/RMarkdown document or R Session.\n\nlibrary(ggformula) #for graphs\n\n\n\n\nEvery visualization type has some modifications that are specific to that type, but there are some universal modifications that should be added to every graph.\n\n\nEvery visualization should have its axes labelled according to the context of the data. Axis labels should always include\n\nThe variables or cases they represent\n\nAlways include units (e.g. inches, %) for variables\n\n\nThe individual/sample/population represented by data\n\nA descriptive title - this should not be “X vs Y”, but something like “As X increases we see that Y decreases”\n\nHere is how that is added to our gf_goal() function:\n\ngf_goal(formula, #takes many different forms \n        data = mydata,\n        xlab = \"X Variable, Units, and/or Sample\",\n        ylab = \"Y Variable, Units, and/or Sample\",\n        title = \"Title describing relationship\")\n\n\n\n\nThe package ggformula is built on top of another package called ggplot2 and so any ggplot2 function can be added to a ggformula generated graphic.\nFor example, we can change the theme to a built-in theme or modify other features using + after the ggformula function to add the ggplot2 layers to the graph.\n\ngf_goal(formula, #takes many different forms \n        data = mydata,\n        xlab = \"X Variable, Units, and/or Sample\",\n        ylab = \"Y Variable, Units, and/or Sample\",\n        title = \"Title describing relationship\") +\n  theme_light()",
    "crumbs": [
      "Data Visualizations with `ggformula`",
      "Overview of `ggformula`"
    ]
  },
  {
    "objectID": "data-visualization/visualization-overview.html#getting-started",
    "href": "data-visualization/visualization-overview.html#getting-started",
    "title": "Overview for Data Visualization",
    "section": "",
    "text": "First, be sure you have installed ggformula. Remember, you only need to install the package once on your machine.\nThen, be sure to load the package ggformula. Remember, you need to do this with each new Quarto/RMarkdown document or R Session.\n\nlibrary(ggformula) #for graphs",
    "crumbs": [
      "Data Visualizations with `ggformula`",
      "Overview of `ggformula`"
    ]
  },
  {
    "objectID": "data-visualization/visualization-overview.html#common-modificationsarguments",
    "href": "data-visualization/visualization-overview.html#common-modificationsarguments",
    "title": "Overview for Data Visualization",
    "section": "",
    "text": "Every visualization type has some modifications that are specific to that type, but there are some universal modifications that should be added to every graph.\n\n\nEvery visualization should have its axes labelled according to the context of the data. Axis labels should always include\n\nThe variables or cases they represent\n\nAlways include units (e.g. inches, %) for variables\n\n\nThe individual/sample/population represented by data\n\nA descriptive title - this should not be “X vs Y”, but something like “As X increases we see that Y decreases”\n\nHere is how that is added to our gf_goal() function:\n\ngf_goal(formula, #takes many different forms \n        data = mydata,\n        xlab = \"X Variable, Units, and/or Sample\",\n        ylab = \"Y Variable, Units, and/or Sample\",\n        title = \"Title describing relationship\")\n\n\n\n\nThe package ggformula is built on top of another package called ggplot2 and so any ggplot2 function can be added to a ggformula generated graphic.\nFor example, we can change the theme to a built-in theme or modify other features using + after the ggformula function to add the ggplot2 layers to the graph.\n\ngf_goal(formula, #takes many different forms \n        data = mydata,\n        xlab = \"X Variable, Units, and/or Sample\",\n        ylab = \"Y Variable, Units, and/or Sample\",\n        title = \"Title describing relationship\") +\n  theme_light()",
    "crumbs": [
      "Data Visualizations with `ggformula`",
      "Overview of `ggformula`"
    ]
  },
  {
    "objectID": "overview/about.html",
    "href": "overview/about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]